{"version":3,"sources":["util/Spotify.js","Components/SearchBar/SearchBar.js","Components/Track/Track.js","Components/TrackList/TrackList.js","Components/SearchResults/SearchResults.js","Components/Playlist/Playlist.js","Components/App/App.js","reportWebVitals.js","index.js"],"names":["accessToken","SearchBar","props","search","bind","handleTermChange","state","term","this","onSearch","event","setState","target","value","className","placeholder","onChange","onClick","React","Component","Track","addTrack","removeTrack","isRemoval","onAdd","track","onRemove","name","artist","album","renderAction","TrackList","tracks","map","id","SearchResults","searchResults","console","log","Playlist","handleNameChange","onNameChange","defaultValue","playlistTracks","onSave","Spotify","getAccessToken","accessTokenMatch","window","location","href","match","expiresInMatch","expiresIn","Number","setTimeout","history","pushState","accessUrl","fetch","headers","Authorization","then","response","json","jsonResponse","items","artists","uri","savePlaylist","trackUris","length","userId","method","body","JSON","stringify","playlistId","uris","App","playlistName","updatePlaylistName","find","savedTrack","push","filter","currentTrack","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.739933a8.chunk.js","sourcesContent":["const clientId = '5b411b4a43a14a0cbccc27bfced413bd';\r\nconst redirectUri = \"http://localhost:3000/\";\r\nlet accessToken;\r\nconst Spotify = { \r\n    getAccessToken() {\r\n        if (accessToken) {\r\n            return accessToken;\r\n        }\r\n        //CHECK FOR ACCESS TOKEN MATCH\r\n        const accessTokenMatch = window.location.href.match(/access_token=([^&]*)/);\r\n        const expiresInMatch = window.location.href.match(/expires_in=([^&]*)/); \r\n\r\n        if (accessTokenMatch && expiresInMatch) {\r\n            accessToken = accessTokenMatch[1];\r\n            const expiresIn = Number(expiresInMatch[1]);\r\n            //this clear the parameters, allowing us  to grab  a new access  token when it expires\r\n            window.setTimeout(() => accessToken = '', expiresIn * 1000);\r\n            window.history.pushState('Access Token', null, '/');\r\n            return accessToken;\r\n        } else {\r\n            const accessUrl =`https://accounts.spotify.com/authorize?client_id=${clientId}&response_type=token&scope=playlist-modify-public&redirect_uri=${redirectUri}`;\r\n            window.location = accessUrl;\r\n        } \r\n    },\r\n    search(term) {\r\n        const accessToken = Spotify.getAccessToken();\r\n        return fetch(`https://api.spotify.com/v1/search?type=track&q=${term}`, {\r\n            headers: {\r\n                Authorization: `Bearer ${accessToken}`\r\n            }\r\n        }).then(response => {\r\n           // console.log(response);\r\n            return response.json();\r\n        }).then(jsonResponse => {\r\n            if (!jsonResponse.tracks) {\r\n                return [];\r\n            }\r\n            return jsonResponse.tracks.items.map(track => ({\r\n                id: track.id,\r\n                name: track.name,\r\n                artist: track.artists[0].name,\r\n                album: track.album.name,\r\n                uri: track.uri\r\n            }));\r\n        });\r\n    },\r\n    savePlaylist(name, trackUris) {\r\n        if (!name || !trackUris.length) {\r\n            return;\r\n        }\r\n        const accessToken = Spotify.getAccessToken();\r\n        const headers = {Authorization: `Bearer ${accessToken}` };\r\n        let userId;\r\n\r\n        return fetch('https://api.spotify.com/v1/me', {headers: headers})\r\n        .then(response => response.json() )\r\n        .then(jsonResponse => {\r\n            userId = jsonResponse.id;\r\n            return fetch(`https://api.spotify.com/v1/users/${userId}/playlists`,\r\n            {\r\n                headers: headers,\r\n                method: 'POST',\r\n                body: JSON.stringify({name: name})\r\n            }).then(response => response.json())\r\n            .then(jsonResponse => {\r\n                const playlistId = jsonResponse.id;\r\n                return fetch(`https://api.spotify.com/v1/users/${userId}/playlists/${playlistId}/tracks`, {\r\n                    headers: headers,\r\n                    method: 'POST',\r\n                    body: JSON.stringify({uris: trackUris})\r\n                })\r\n            })\r\n        })\r\n    }\r\n\r\n};\r\nexport default Spotify;","import React from 'react';\r\nimport './SearchBar.css';\r\n\r\n\r\nexport default class SearchBar extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.search = this.search.bind(this);\r\n        this.handleTermChange = this.handleTermChange.bind(this);\r\n        this.state = {\r\n            term: ''\r\n        }\r\n    }\r\n    search() {\r\n        this.props.onSearch(this.state.term);\r\n    }\r\n    handleTermChange(event) {\r\n        this.setState({\r\n            term: event.target.value\r\n        })\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"SearchBar\">\r\n                <input placeholder=\"Enter A Song, Album, or Artist\" \r\n                onChange={this.handleTermChange} />\r\n                <button className=\"SearchButton\" onClick={this.search}>SEARCH</button>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport './Track.css';\r\n\r\n\r\nexport default class Track extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.addTrack = this.addTrack.bind(this);\r\n        this.removeTrack = this.removeTrack.bind(this);\r\n    }\r\n    renderAction() {\r\n        \r\n        if (this.props.isRemoval) {\r\n            return <button className=\"Track-action\" onClick={this.removeTrack}>-</button>\r\n        } else {\r\n            return <button className=\"Track-action\" onClick={this.addTrack}>+</button>\r\n        }\r\n    }\r\n    addTrack() {\r\n        this.props.onAdd(this.props.track);\r\n    }\r\n    removeTrack() {\r\n        this.props.onRemove(this.props.track);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"Track\">\r\n                <div className=\"Track-information\">\r\n                    <h3>{this.props.track.name} </h3>\r\n                    <p>{this.props.track.artist} | {this.props.track.album} </p>\r\n                </div>\r\n                {this.renderAction()}\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport './TrackList.css';\r\nimport Track from '../Track/Track';\r\n\r\nclass TrackList extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"TrackList\">\r\n               {\r\n                this.props.tracks.map(track => { return <Track track={track} \r\n                    key={track.id} \r\n                    onAdd={this.props.onAdd} \r\n                    onRemove={this.props.onRemove} \r\n                    isRemoval={this.props.isRemoval} /> })\r\n                //console.log('tl' + this.props.tracks)\r\n               }  \r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default TrackList;","import React from 'react';\r\nimport './SearchResults.css';\r\nimport  TrackList  from '../TrackList/TrackList';\r\n\r\nexport default class SearchResults extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className=\"SearchResults\">\r\n                <h2>Results</h2>\r\n                <TrackList tracks={this.props.searchResults} onAdd={this.props.onAdd} isRemoval={false}/>\r\n                {console.log('sr' + this.props.searchResults)}\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport './Playlist.css';\r\nimport  TrackList  from '../TrackList/TrackList';\r\n\r\nexport default class Playlist extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleNameChange = this.handleNameChange.bind(this);\r\n    }\r\n    handleNameChange(event) {\r\n        this.props.onNameChange(event.target.value);\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <div className=\"Playlist\">\r\n                <input defaultValue={'New Playlist'} onChange={this.handleNameChange} />\r\n                <TrackList tracks={this.props.playlistTracks} onRemove={this.props.onRemove} isRemoval={true} \r\n                 />\r\n                <button className=\"Playlist-save\" onClick={this.props.onSave}>SAVE TO SPOTIFY</button>\r\n            </div>\r\n        )\r\n    }\r\n}","\r\nimport React from 'react';\r\nimport './App.css';\r\nimport SearchBar from '../SearchBar/SearchBar';\r\nimport SearchResults from '../SearchResults/SearchResults';\r\nimport Playlist from '../Playlist/Playlist';\r\n\r\nimport Spotify from '../../util/Spotify';\r\n\r\nexport default class App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      searchResults: [{name:'name1', artist:'artist1', album: 'album1', id: 1}, \r\n      {name:'name2', artist:'artist2', album: 'album2', id: 2}, \r\n      {name:'name3', artist:'artist3', album: 'album3', id: 3}],\r\n\r\n      playlistTracks: [{name:'name12', artist:'artist12', album: 'album12', id: 6}, \r\n      {name:'name22', artist:'artist22', album: 'album22', id: 7}, \r\n      {name:'name32', artist:'artist32', album: 'album32', id: 8},\r\n      {name:'name1', artist:'artist1', album: 'album1', id: 1}],\r\n      playlistName: 'THE main'\r\n\r\n    }\r\n    this.addTrack = this.addTrack.bind(this);\r\n    this.removeTrack = this.removeTrack.bind(this);\r\n    this.updatePlaylistName = this.updatePlaylistName.bind(this);\r\n    this.savePlaylist = this.savePlaylist.bind(this);\r\n    this.search = this.search.bind(this);\r\n\r\n  }\r\n  addTrack(track) {\r\n    let tracks = this.state.playlistTracks;\r\n    if (tracks.find(savedTrack => savedTrack.id === track.id)) {\r\n      return;\r\n    } else {\r\n      tracks.push(track);\r\n      this.setState({playlistTracks: tracks})\r\n    }\r\n  }\r\n\r\n  removeTrack(track) {\r\n    let tracks = this.state.playlistTracks;\r\n    tracks = tracks.filter( currentTrack => currentTrack.id !== track.id)\r\n      this.setState({playlistTracks: tracks})\r\n    \r\n  }\r\n  updatePlaylistName(name) {\r\n    this.setState({playlistName: name});\r\n  }\r\n\r\n  savePlaylist(){\r\n   // alert('ok');\r\n   const trackUris = this.state.playlistTracks.map(track => track.uri);\r\n   Spotify.savePlaylist(this.state.playlistName, trackUris).then(() => {\r\n     this.setState({\r\n       playlistName: 'New Playlist',\r\n       playlistTracks: []\r\n     })\r\n   });\r\n  }\r\n  search(term) {\r\n  //  alert('ok');\r\n    Spotify.search(term).then(searchResults => {\r\n      this.setState({\r\n        searchResults: searchResults\r\n      })\r\n    })\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>Ja<span className=\"highlight\">mmm</span>ing</h1>\r\n        <div className=\"App\">\r\n          <SearchBar onSearch={this.search} />\r\n          <div className=\"App-playlist\">\r\n            <SearchResults searchResults={this.state.searchResults} onAdd={this.addTrack} \r\n             />\r\n            <Playlist playlistName={this.state.playlistName} playlistTracks={this.state.playlistTracks} onRemove={this.removeTrack} \r\n            onNameChange={this.updatePlaylistName}\r\n            onSave={this.savePlaylist} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n}\r\n\r\n\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './Components/App/App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}